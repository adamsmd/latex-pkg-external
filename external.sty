%% A package for rendering LaTeX code in separate external documents
%%
%% This is file `external.sty',
%%
%% Copyright (C) 2019 by Michael D. Adams
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either
%% version 1.3 of this license or (at your option) any later
%% version. The latest version of this license is in:
%%
%%    http://www.latex-project.org/lppl.txt
%%
%% and version 1.3 or later is part of all distributions of
%% LaTeX version 2005/12/01 or later.
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{external}[2019/01/05 v0.1 Rendering LaTeX code in separate external documents]

\RequirePackage{external.code}

\RequirePackage{graphicx}
\RequirePackage{keyval}
\RequirePackage{kvoptions}
\RequirePackage{shellesc}
\RequirePackage{ifpdf}
\RequirePackage{ifxetex}
\RequirePackage{ifluatex}
\RequirePackage{environ}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Options
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\external@stringkey}[2]{%
  \expandafter\def\csname external@#1\endcsname{#2}%
  \define@key{external}{#1}{\expandafter\def\csname external@#1\endcsname{##1}}}

\newcommand{\external@lengthkey}[2]{%
  \expandafter\newlength\csname external@#1\endcsname%
  \expandafter\setlength\csname external@#1\endcsname{#2}%
  \define@key{external}{#1}{\expandafter\setlength\csname external@#1\endcsname{##1}}}

\newcounter{external@number}

\external@stringkey{before}{\stepcounter{external@number}}
\external@stringkey{after}{}

\external@stringkey{documentclass}{article} % empty = do not add the `\documentclass{...}` declaration
\external@stringkey{documentclass/options}{}
\external@stringkey{preamble}{}
\external@stringkey{pre-savebox}{}
\external@stringkey{pre-usebox}{}

\external@stringkey{math}{false}
\def\external@math@false{false}
\def\external@math@inline{inline}
\def\external@math@display{display}

\external@stringkey{latex}{} % empty = auto-detect
\external@stringkey{latex/options}{-halt-on-error -interaction=batchmode}

\external@stringkey{file}{\jobname-external-\arabic{external@number}}
\external@stringkey{file/tex}{.tex}
\external@stringkey{file/dim}{.dim}
\external@stringkey{file/pdf}{.pdf}

\external@lengthkey{margin/top}{1in}
\external@lengthkey{margin/bottom}{1in}
\external@lengthkey{margin/left}{1in}
\external@lengthkey{margin/right}{1in}

\external@stringkey{includegraphics/options}{}

\external@stringkey{debug}{false}
\def\external@debug@false{false}
\def\external@debug@true{true}

\ProcessKeyvalOptions*

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Globals
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newlength{\external@TOP}
\newlength{\external@BOTTOM}
\newlength{\external@LEFT}
\newlength{\external@RIGHT}
\newlength{\external@WIDTH}
\newlength{\external@HEIGHT}
\newlength{\external@DEPTH}

\newwrite{\external@filehandle}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% High-level Commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%% \externalkeys

%% ARGS: options
\newcommand{\externalkeys}[1]{\setkeys{external}{#1}}

%%%%%%%% \external

%% ARGS: [options] body
\newcommand{\external}[2][]{{%
  \externalkeys{#1}%
  \csname external@before\endcsname%
  \ExternalWrite@{#2}%
  \ExternalCompile@%
  \ExternalRead@%
  \csname external@after\endcsname}}

%%%%%%%% external environment

%% ARGS: [options]
\NewEnviron{externalenv}[1][]{%
  % Use `\edef` to expand `\BODY` early (and exactly once)
  \edef\external@code{%
    \unexpanded{\external[#1]}{\expandafter\unexpanded\expandafter{\BODY}}}%
  \external@code}

%%%%%%%% \newexternal

%% ARGS: [options] name
\newcommand{\newexternal}[2][]{%
  %% ARGS: [options] body
  \newcommand{#2}[2][]{\external[#1,##1]{##2}}}

%%%%%%%% newexternal environment

%% ARGS: [options] name
\newcommand{\newexternalenv}[2][]{%
  %% ARGS: [options]
  \NewEnviron{#2}[1][]{%
    % Use `\edef` to expand `\BODY` early (and exactly once)
    \edef\external@code{%
      \unexpanded{\external[#1,##1]}{\expandafter\unexpanded\expandafter{\BODY}}}%
    \external@code}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Low-level Commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%% \ExternalWrite

%% ARGS: [options] body
\newcommand{\ExternalWrite}[2][]{{\externalkeys{#1}\ExternalWrite@{#2}}}

%% ARGS: body
\newcommand{\ExternalWrite@}[1]{%
  % Debug code
  \ifx     \external@debug@false\external@debug
  \else\ifx\external@debug@true \external@debug
    \typeout{**** Begin \noexpand\ExternalWrite on {\external@file} with {\unexpanded{#1}}}%
  \else\PackageError{external}{In \noexpand\ExternalWrite,
    unknown `debug` option (must be "false" or "true"):
    \external@debug}
  \fi\fi
  % Error checking
  \ifx\empty\external@file
    \PackageError{external}{In \noexpand\ExternalWrite, no output TeX file specified}{}%
  \fi
  % Handling `math` option
  \ifx     \external@math@false  \external@math\def\external@body{#1}%
  \else\ifx\external@math@inline \external@math\def\external@body{$#1$}%
  \else\ifx\external@math@display\external@math\def\external@body{$\displaystyle#1$}%
  \else\PackageError{external}{In \noexpand\ExternalWrite,
    unknown `math` option (must be "false", "inline", or "display"):
    \external@math}{}%
  \fi\fi\fi
  % Use `\edef` to control what to expand in the arguments of `\ExternalCode`
  \edef\external@code{%
    \unexpanded{\ExternalCode}%
    {\external@file\csname external@file/dim\endcsname}%
    {\unexpanded{\expandafter\setlength\csname external@TOP\endcsname}{\the\csname external@margin/top\endcsname}%
     \unexpanded{\expandafter\setlength\csname external@BOTTOM\endcsname}{\the\csname external@margin/bottom\endcsname}%
     \unexpanded{\expandafter\setlength\csname external@LEFT\endcsname}{\the\csname external@margin/left\endcsname}%
     \unexpanded{\expandafter\setlength\csname external@RIGHT\endcsname}{\the\csname external@margin/right\endcsname}%
     \ifx\empty\external@documentclass
     \else
       \unexpanded{\documentclass}%
       [\csname external@documentclass/options\endcsname]%
       {\external@documentclass}%
     \fi
     \expandafter\unexpanded\expandafter{\external@preamble}}%
    {\expandafter\expandafter\expandafter\unexpanded\expandafter\expandafter\expandafter{\csname external@pre-savebox\endcsname}}% TODO: explain expandafters (use \expandonce from \usepackage{etoolbox})
    {\expandafter\unexpanded\expandafter{\external@body}}%
    {\expandafter\expandafter\expandafter\unexpanded\expandafter\expandafter\expandafter{\csname external@pre-usebox\endcsname}}}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%%   Core code   %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  \immediate\openout\external@filehandle="\external@file\csname external@file/tex\endcsname"%
  \immediate\write\external@filehandle{\external@code}%
  \immediate\closeout\external@filehandle
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%% End core code %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  % Sanity checking (warnings)
  \IfFileExists{\external@file\csname external@file/tex\endcsname}
    {}
    {\PackageWarning{external}{In \noexpand\ExternalWrite, output TeX file does not exist:
        \external@file\csname external@file/tex\endcsname}}%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** End \noexpand\ExternalWrite on {\external@file}}%
  \fi
}

%%%%%%%% \ExternalCompile

%% ARGS: [options]
\newcommand{\ExternalCompile}[1][]{{\externalkeys{#1}\ExternalCompile@}}

%% ARGS: (none)
\newcommand{\ExternalCompile@}{%
  % Debug code
  \ifx     \external@debug@false\external@debug
  \else\ifx\external@debug@true \external@debug
    \typeout{**** Begin \noexpand\ExternalCompile on {\external@file}}%
  \else\PackageError{external}{In \noexpand\ExternalCompile,
    unknown `debug` option (must be "false" or "true"):
    \external@debug}
  \fi\fi
  % Error checking
  \ifx\empty\external@file
    \PackageError{external}{In \noexpand\ExternalCompile, no input TeX file specified}{}%
  \fi
  \ifcase\pdf@shellescape
    \PackageError{external}{In \noexpand\ExternalCompile,
      shell escape (i.e., \noexpand\write18) is not enabled.
      Maybe add `-shell-escape` to the command line options}{}%
  \or
  \or
    \PackageError{external}{In \noexpand\ExternalCompile,
      shell escape (i.e., \noexpand\write18) is not enabled.
      Maybe add `-shell-escape` to the command line options}{}%
  \fi
  \IfFileExists{\external@file\csname external@file/tex\endcsname}
    {}
    {\PackageError{external}{In \noexpand\ExternalCompile, input TeX file does not exist:
        \external@file\csname external@file/tex\endcsname}{}}%
  % Determine what latex command to use
  \ifx\empty\external@latex
    \ifluatex     \def\external@latexcmd{lualatex}%
    \else\ifxetex \def\external@latexcmd{xelatex}%
    \else\ifpdf   \def\external@latexcmd{pdflatex}%
    \else\PackageError{external}{In \noexpand\ExternalCompile,
      could not detect the latex command to use.
      Use the `latex` option to explicitly specify it}{}%
    \fi\fi\fi
  \else
    \let\external@latexcmd{\external@latex}%
  \fi
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%%   Core code   %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  \ShellEscape{\external@latexcmd\space
    \csname external@latex/options\endcsname\space
    \external@file\csname external@file/tex\endcsname}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%% End core code %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  % Sanity checking (warnings)
  \IfFileExists{\external@file\csname external@file/pdf\endcsname}
    {}
    {\PackageWarning{external}{In \noexpand\ExternalCompile, output PDF file does not exist:
        \external@file\csname external@file/pdf\endcsname}}%
  \IfFileExists{\external@file\csname external@file/dim\endcsname}
    {}
    {\PackageWarning{external}{In \noexpand\ExternalCompile, output dimension file does not exist:
        \external@file\csname external@file/dim\endcsname}}%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** End \noexpand\ExternalCompile on {\external@file}}%
  \fi
}

%%%%%%%% \ExternalRead

%% ARGS: [options]
\newcommand{\ExternalRead}[1][]{{\externalkeys{#1}\ExternalRead@}}

%% ARGS: (none)
\newcommand{\ExternalRead@}{%
  % Debug code
  \ifx     \external@debug@false\external@debug
  \else\ifx\external@debug@true \external@debug
    \typeout{**** Begin \noexpand\ExternalRead on {\external@file}}%
  \else\PackageError{external}{In \noexpand\ExternalRead,
    unknown `debug` option (must be "false" or "true"):
    \external@debug}
  \fi\fi
  % Handling the `math` option
  \ifx     \external@math@false  \external@math\ExternalRead@@
  \else\ifx\external@math@inline \external@math\ExternalRead@@
  \else\ifx\external@math@display\external@math\[\ExternalRead@@\]%
  \else\PackageError{external}{In \noexpand\ExternalRead,
    unknown `math` option (must be "false", "inline", or "display"):
    \external@math}{}%
  \fi\fi\fi
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** End \noexpand\ExternalRead on {\external@file}}%
  \fi
}

%% ARGS: (none)
\newcommand{\ExternalRead@@}{%
  % Error checking
  \ifx\empty\external@file
    \PackageError{external}{In \ExternalRead, no input PDF file specified}{}%
  \fi
  \IfFileExists{\external@file\csname external@file/pdf\endcsname}
    {}
    {\PackageError{external}{In \noexpand\ExternalRead, input PDF file does not exist
        (maybe compilation of the LaTeX file failed):
        \external@file\csname external@file/pdf\endcsname}{}}%
  \IfFileExists{\external@file\csname external@file/dim\endcsname}
    {}
    {\PackageError{external}{In \noexpand\ExternalRead, input dimension file does not exist
        (maybe compilation of the LaTeX file failed):
        \external@file\csname external@file/dim\endcsname}{}}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%%   Core code   %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  \input{\external@file.dim}% Load the dimensions of the symbol
  \raisebox{-\external@DEPTH}{% Use `\raisebox` to model the symbol's depth.
    % Use `\edef` to expand `\external@includegraphics/options` before
    % `\includegraphics` parses its argument.
    \edef\external@code{%
      \unexpanded{\includegraphics}
      [trim={{\the\external@LEFT} {\the\external@BOTTOM} {\the\external@RIGHT} {\the\external@TOP}},%
        \csname external@includegraphics/options\endcsname]
      \unexpanded{{\external@file.pdf}}}%
    \external@code}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%% End core code %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
}
\endinput
%%
%% End of file `external.sty'.
