% A package for rendering LaTeX code in separate external documents
%
% (c) Michael D. Adams <https://michaeldadams.org>
%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt .
%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{external}[2019/01/05 v0.1 Rendering LaTeX code in separate external documents]

\RequirePackage{external.code}

\RequirePackage{graphicx}
\RequirePackage{keyval}
\RequirePackage{kvoptions}
\RequirePackage{shellesc}
\RequirePackage{ifpdf}
\RequirePackage{ifxetex}
\RequirePackage{ifluatex}
\RequirePackage{environ}

% TODO: example.tex -> external.tex
% TODO: dtx
% TODO: key for controlling expansion?
% TODO: texdoc dtxtut
% TODO: https://texfaq.org/FAQ-dtx

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Options
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\external@stringkey}[2]{%
  \expandafter\def\csname external@#1\endcsname{#2}%
  \define@key{external}{#1}{\expandafter\def\csname external@#1\endcsname{##1}}}

\newcommand{\external@lengthkey}[2]{%
  \expandafter\newlength\csname external@#1\endcsname%
  \expandafter\setlength\csname external@#1\endcsname{#2}%
  \define@key{external}{#1}{\expandafter\setlength\csname external@#1\endcsname{##1}}}

\newcounter{external@number}

\external@stringkey{file}{\jobname-external-\arabic{external@number}}
\external@stringkey{file/dim}{.dim}
\external@stringkey{file/tex}{.tex}
\external@stringkey{file/pdf}{.pdf}

\external@stringkey{documentclass}{article} % empty = do not add the `\documentclass{...}` declaration
\external@stringkey{documentclass/options}{}
\external@stringkey{preamble}{}
\external@stringkey{pre-savebox}{}
\external@stringkey{pre-usebox}{}
\external@stringkey{action}{\stepcounter{external@number}}

\external@stringkey{math}{false}
\def\external@math@false{false}
\def\external@math@true{true}
\def\external@math@inline{inline}
\def\external@math@display{display}

\external@stringkey{latex}{} % empty = auto-detect
\external@stringkey{latex/options}{-halt-on-error -interaction=batchmode}

\external@lengthkey{top}{1in}
\external@lengthkey{bottom}{1in}
\external@lengthkey{left}{1in}
\external@lengthkey{right}{1in}

\external@stringkey{includegraphics/options}{}

\external@stringkey{debug}{true}
\def\external@debug@false{false}
\def\external@debug@true{true}

\ProcessKeyvalOptions*

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Globals
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Values set while reading a dimension file
\newlength{\external@TOP}
\newlength{\external@BOTTOM}
\newlength{\external@LEFT}
\newlength{\external@RIGHT}
\newlength{\external@WIDTH}
\newlength{\external@HEIGHT}
\newlength{\external@DEPTH}

% Stream that `\externalWrite` writes to
\newwrite{\external@filehandle}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% High-level Commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%% \externalkeys

% ARGS: options
\newcommand{\externalkeys}[1]{\setkeys{external}{#1}}

%%%%%%%% \external

% ARGS: [options] body
\newcommand{\external}[2][]{{%
  \externalkeys{#1}%
  \csname external@action\endcsname%
  \ExternalWrite@{#2}%
  \ExternalRun@%
  \ExternalRead@}}

%%%%%%%% external environment

% ARGS: [options]
\NewEnviron{externalenv}[1][]{\expandafter\external@externalflipped\expandafter{\BODY}{#1}}

% Helper to make it easy to expand `\BODY` in `\NewEnviron` early
% ARGS: body options
\newcommand{\external@externalflipped}[2]{\external[#2]{#1}}

%%%%%%%% \newexternal

% ARGS: [options] name
\newcommand{\newexternal}[2][]{
  % ARGS: [options] body
  \newcommand{#2}[2][]{\external[#1,##1]{##2}}}

%%%%%%%% newexternal environment

% ARGS: [options] name
\newcommand{\newexternalenv}[2][]{
  % ARGS: [options]
  \NewEnviron{#2}[1][]{\expandafter\external@externalflipped\expandafter{\BODY}{#1,##1}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Low-level Commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%% \ExternalWrite

% ARGS: [options] body
\newcommand{\ExternalWrite}[2][]{{\externalkeys{#1}\ExternalWrite@{#2}}}

% ARGS: body
\newcommand{\ExternalWrite@}[1]{%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** Begin ExternalWrite \external@file}%
  \fi
  % Error checking
  \ifx\empty\external@file
    \PackageError{external}{In \noexpand\ExternalWrite, no output TeX file specified}{}%
  \fi
  % Handling `math` option
  \ifx     \external@math@false  \external@math\def\external@body{#1}%
  \else\ifx\external@math@true   \external@math\def\external@body{$#1$}%
  \else\ifx\external@math@inline \external@math\def\external@body{$#1$}%
  \else\ifx\external@math@display\external@math\def\external@body{$\displaystyle#1$}%
  \else\PackageError{external}{In \noexpand\ExternalRead,
    unknown `math` option (must be "true", "false", "inline", or "display"):
    \external@math}{}%
  \fi\fi\fi\fi
  % Use `\edef` to control what to expand in the arguments of `\ExternalCode`
  \edef\external@code{%
    \unexpanded{\ExternalCode}%
    {\external@file\csname external@file/dim\endcsname}%
    {\unexpanded{\expandafter\setlength\csname external@TOP\endcsname}{\the\external@top}%
     \unexpanded{\expandafter\setlength\csname external@BOTTOM\endcsname}{\the\external@bottom}%
     \unexpanded{\expandafter\setlength\csname external@LEFT\endcsname}{\the\external@left}%
     \unexpanded{\expandafter\setlength\csname external@RIGHT\endcsname}{\the\external@right}%
     \ifx\empty\external@documentclass
     \else
       \unexpanded{\documentclass}%
       [\csname external@documentclass/options\endcsname]%
       {\external@documentclass}%
     \fi
     \expandafter\unexpanded\expandafter{\external@preamble}}%
    {\csname external@pre-savebox\endcsname}%
    {\expandafter\unexpanded\expandafter{\external@body}}%
    {\csname external@pre-usebox\endcsname}}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%%   Core code   %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  \immediate\openout\external@filehandle="\external@file\csname external@file/tex\endcsname"%
  \immediate\write\external@filehandle{\external@code}%
  \immediate\closeout\external@filehandle
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%% End core code %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  % Sanity checking (warnings)
  \IfFileExists{\external@file\csname external@file/tex\endcsname}
    {}
    {\PackageWarning{external}{In \noexpand\ExternalWrite, output TeX file does not exist:
        \external@file\csname external@file/tex\endcsname}}%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** End ExternalWrite \external@file}%
  \fi
}

%%%%%%%% \ExternalRun

% ARGS: [options]
\newcommand{\ExternalRun}[1][]{{\externalkeys{#1}\ExternalRun@}}

% ARGS: (none)
\newcommand{\ExternalRun@}{{%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** Begin ExternalRun \external@file}%
  \fi
  % Error checking
  \ifx\empty\external@file
    \PackageError{external}{In \noexpand\ExternalRun, no input TeX file specified}{}%
  \fi
  \ifcase\pdf@shellescape
    \PackageError{external}{In \noexpand\ExternalRun,
      shell escape (i.e., \noexpand\write18) is not enabled.
      Maybe add `-shell-escape` to the command line options}{}%
  \or
  \or
    \PackageError{external}{In \noexpand\ExternalRun,
      shell escape (i.e., \noexpand\write18) is not enabled.
      Maybe add `-shell-escape` to the command line options}{}%
  \fi
  \IfFileExists{\external@file\csname external@file/tex\endcsname}
    {}
    {\PackageError{external}{In \noexpand\ExternalRun, input TeX file does not exist:
        \external@file\csname external@file/tex\endcsname}{}}%
  % Determine what latex command to use
  \ifx\empty\external@latex
    \ifluatex     \def\external@latexcmd{lualatex}%
    \else\ifxetex \def\external@latexcmd{xelatex}%
    \else\ifpdf   \def\external@latexcmd{pdflatex}%
    \else\PackageError{external}{In \noexpand\ExternalRun,
      could not detect the latex command to use.
      Use the `latex` option to explicitly specify it}{}%
    \fi\fi\fi
  \else
    \let\external@latexcmd{\external@latex}%
  \fi
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%%   Core code   %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  \ShellEscape{\external@latexcmd\space
    \csname external@latex/options\endcsname\space
    \external@file\csname external@file/tex\endcsname}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%% End core code %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  % Sanity checking (warnings)
  \IfFileExists{\external@file\csname external@file/pdf\endcsname}
    {}
    {\PackageWarning{external}{In \noexpand\ExternalRun, output PDF file does not exist:
        \external@file\csname external@file/pdf\endcsname}}%
  \IfFileExists{\external@file\csname external@file/dim\endcsname}
    {}
    {\PackageWarning{external}{In \noexpand\ExternalRun, output dimension file does not exist:
        \external@file\csname external@file/dim\endcsname}}%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** End ExternalRun \external@file}%
  \fi
}}

%%%%%%%% \ExternalRead

% ARGS: [options]
\newcommand{\ExternalRead}[1][]{{%
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** Begin ExternalRead \external@file}%
  \fi
  % Core code
  \externalkeys{#1}%
  \ExternalRead@
  % Debug code
  \ifx\external@debug\external@debug@true
    \typeout{**** End ExternalRead \external@file}%
  \fi
  }}

% ARGS: (none)
\newcommand{\ExternalRead@}{%
  % Handling the `math` option
  \ifx     \external@math@false  \external@math\ExternalRead@@
  \else\ifx\external@math@true   \external@math\ExternalRead@@
  \else\ifx\external@math@inline \external@math\ExternalRead@@
  \else\ifx\external@math@display\external@math\[\ExternalRead@@\]%
  \else\PackageError{external}{In \noexpand\ExternalRead,
    unknown `math` option (must be "true", "false", "inline", or "display"):
    \external@math}{}%
  \fi\fi\fi\fi}

% ARGS: (none)
\newcommand{\ExternalRead@@}{%
  % Error checking
  \ifx\empty\external@file
    \PackageError{external}{In \ExternalRead, no input PDF file specified}{}%
  \fi
  \IfFileExists{\external@file\csname external@file/pdf\endcsname}
    {}
    {\PackageError{external}{In \noexpand\ExternalRead, input PDF file does not exist:
        \external@file\csname external@file/pdf\endcsname}{}}%
  \IfFileExists{\external@file\csname external@file/dim\endcsname}
    {}
    {\PackageError{external}{In \noexpand\ExternalRun, input dimension file does not exist:
        \external@file\csname external@file/dim\endcsname}{}}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%%   Core code   %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
  \input{\external@file.dim}% Load the dimensions of the symbol
  \raisebox{-\external@DEPTH}{% Use `\raisebox` to model the symbol's depth.
    % Use `\edef` to expand `\external@includegraphics/options` before
    % `\includegraphics` parses its argument.
    \edef\external@code{%
      \unexpanded{\includegraphics}
      [trim={{\the\external@LEFT} {\the\external@BOTTOM} {\the\external@RIGHT} {\the\external@TOP}},%
        \csname external@includegraphics/options\endcsname]
      \unexpanded{{\external@file.pdf}}}%
    \external@code}%
  %%%%%%%%%%%%%%%%%%%%%%%
  %%%% End core code %%%%
  %%%%%%%%%%%%%%%%%%%%%%%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\endinput
%%
%% End of file `external.sty'.
